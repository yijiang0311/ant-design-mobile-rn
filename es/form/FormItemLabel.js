"use client";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _typeof=require("@babel/runtime/helpers/typeof");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _view=_interopRequireDefault(require("../view"));var _useLocale3=_interopRequireDefault(require("../locale-provider/useLocale"));var _context=require("./context");function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var FormItemLabel=function FormItemLabel(_ref){var label=_ref.label,labelStyle=_ref.labelStyle,required=_ref.required,requiredMark=_ref.requiredMark,styles=_ref.styles;var _useLocale=(0,_useLocale3.default)('Form'),_useLocale2=(0,_slicedToArray2.default)(_useLocale,1),locale=_useLocale2[0];var _React$useContext=React.useContext(_context.FormContext),contextLabelStyle=_React$useContext.labelStyle;if(!label){return null;}var mergedLabelStyle=labelStyle||contextLabelStyle||{};var labelChildren=React.createElement(_view.default,{style:[styles.formItemLabelText,mergedLabelStyle]},label);if(typeof requiredMark==='function'){labelChildren=requiredMark(labelChildren,{required:!!required});}else if(requiredMark==='optional'&&!required){labelChildren=React.createElement(React.Fragment,null,labelChildren,React.createElement(_reactNative.Text,{style:styles.optional},locale.optional));}return React.createElement(_reactNative.View,{style:styles.formItemLabel},Boolean(required&&requiredMark)&&React.createElement(_reactNative.Text,{style:styles.asterisk},"*"),labelChildren);};var _default=FormItemLabel;exports.default=_default;